{"version":3,"sources":["constants/KeyFunctions.js","assets/svg/App-Icon.svg","components/calculator/Calculator.js","components/key/Key.js","constants/CalculatorKeys.js","assets/svg sync /^/.//.*/.svg$","assets/svg/divide.svg","assets/svg/equals.svg","assets/svg/minus.svg","assets/svg/plus.svg","assets/svg/times.svg","App.js","serviceWorker.js","index.js"],"names":["keyFunctions","mathematicalOperators","clearAllCharacters","clearLastWholeEntry","clearLastCharacter","doCalculation","doPercentage","module","exports","isMathematicalOperator","value","includes","willClearAllCharacters","willClearLastWholeEntry","willClearLastCharacter","willPerformCalculation","isPercentage","__webpack_require__","p","Calculator","props","_this","Object","_Users_sam_Documents_GitHub_simple_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_sam_Documents_GitHub_simple_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_sam_Documents_GitHub_simple_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","_mapCalculatorKeysToComponent","CalculatorKeys","map","key","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_key_Key__WEBPACK_IMPORTED_MODULE_8__","id","label","icon","colour","captureKeyValue","_captureKeyValue","_clearEverything","_clearLastWholeEntry","_removeLastCharFromCalculation","_doCalculation","_checkIfLastValueIsAMathOperator","shouldAddSpace","outputValue","setState","calculation","state","splitCalculation","split","removeBlankEntries","filter","arrValue","lastEntry","length","pop","join","result","eval","toFixed","lastWholeEntry","substring","isLastEntryMathOp","isCurrValueMathOp","bind","_Users_sam_Documents_GitHub_simple_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","className","Component","Key","_captureAndStoreValue","target","getAttribute","_passStateValueToParent","_renderLabelForKey","concat","require","_this2","onClick","event","data-value","d","__webpack_exports__","./App-Icon.svg","./divide.svg","./equals.svg","./minus.svg","./plus.svg","./times.svg","webpackContext","req","webpackContextResolve","o","e","Error","code","keys","resolve","App","react_default","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdbd7fb6.chunk.js","sourcesContent":["/**\n * An object that contains the available key functions.\n */\nconst keyFunctions = {\n    mathematicalOperators: ['/', '*', '-', '+'],\n    clearAllCharacters: 'AC',\n    clearLastWholeEntry: 'C', // TODO: think of a better name.\n    clearLastCharacter: 'del',\n    doCalculation: '=',\n    doPercentage: '%'\n}\n\n/**\n * This will check if the given value is a mathematical operator.\n * \n * @var {Any} value The value to check.\n * @return {Bool} true/false\n */\nconst isMathematicalOperator = (value) => {\n    return keyFunctions.mathematicalOperators.includes(value) ? true : false;\n}\n\n/**\n * This will check if the given value will clear all characters.\n *\n * @var {Any} value The value to check.\n * @return {Bool} true/false\n */\nconst willClearAllCharacters = (value) => {\n    return value === keyFunctions.clearAllCharacters ? true : false;\n}\n\n/**\n * This will check if the given value will clear the last whole entry item.\n * E.g Calculation: (23 * 45.5) - this function would clear '45.5' .\n *\n * @var {Any} value The value to check.\n * @return {Bool} true/false\n */\nconst willClearLastWholeEntry = (value) => {\n    return value === keyFunctions.clearLastWholeEntry ? true : false;\n}\n\n/**\n * This will check if the given value will clear the last character.\n *\n * @var {Any} value The value to check.\n * @return {Bool} true/false\n */\nconst willClearLastCharacter = (value) => {\n    return value === keyFunctions.clearLastCharacter ? true : false;\n}\n\n/**\n * This will check if the given value is the one that performs\n * a calculation.\n *\n * @var {Any} value The value to check.\n * @return {Bool} true/false\n */\nconst willPerformCalculation = (value) => {\n    return value === keyFunctions.doCalculation ? true : false;\n}\n\n/**\n * This will check if the given value is the one that performs\n * a percentage.\n *\n * @var {Any} value The value to check.\n * @return {Bool} true/false\n */\nconst isPercentage = (value) => {\n    return value === keyFunctions.doPercentage ? true : false;\n}\n\n// Exports\n module.exports.isMathematicalOperator = isMathematicalOperator;\n module.exports.willClearAllCharacters = willClearAllCharacters;\n module.exports.willClearLastWholeEntry = willClearLastWholeEntry;\n module.exports.willClearLastCharacter = willClearLastCharacter;\n module.exports.willPerformCalculation = willPerformCalculation;\n module.exports.isPercentage = isPercentage;","module.exports = __webpack_public_path__ + \"static/media/App-Icon.688422f5.svg\";","import React, { Component } from 'react';\nimport './Calculator.css';\n\n// Components\nimport Key from './../key/Key';\n\n// Constants\nimport {CalculatorKeys} from './../../constants/CalculatorKeys';\nimport {isMathematicalOperator, willPerformCalculation, willClearAllCharacters, willClearLastCharacter, isPercentage, willClearLastWholeEntry} from './../../constants/KeyFunctions';\n\nclass Calculator extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            calculation: '',\n            result: 0\n        }\n\n        this._mapCalculatorKeysToComponent = this._mapCalculatorKeysToComponent.bind(this);\n        this._captureKeyValue = this._captureKeyValue.bind(this);\n        this._doCalculation = this._doCalculation.bind(this);\n        this._clearEverything = this._clearEverything.bind(this);\n        this._clearLastWholeEntry = this._clearLastWholeEntry.bind(this);\n        this._removeLastCharFromCalculation = this._removeLastCharFromCalculation.bind(this);\n        this._checkIfLastValueIsAMathOperator = this._checkIfLastValueIsAMathOperator.bind(this);\n    }\n\n    render() {\n        return(\n            <div className=\"calculator-body\">\n                <div className=\"calculator-output\">\n                    <div className=\"calculation\">\n                        <span>{this.state.calculation}</span>\n                    </div>\n                    <div className=\"calculation-result\">\n                        <h3>{this.state.result}</h3>\n                    </div>\n                </div>\n                <div className=\"calculator-keypad\">\n                    {this._mapCalculatorKeysToComponent()}\n                </div>\n            </div>\n        )\n    }\n\n    /**\n     * This will map a static array of objects that contain\n     * the data for our Key component.\n     */\n    _mapCalculatorKeysToComponent = () => {\n        return CalculatorKeys.map(key => {\n            return(\n                <Key \n                    key={key.id} \n                    label={key.label} \n                    value={key.value} \n                    icon={key.icon} \n                    colour={key.colour}\n                    captureKeyValue={this._captureKeyValue}\n                />\n            )\n        });\n    }\n\n    /**\n     * This will capture the selected key value.\n     * \n     * @var {Any} value The value that is being pulled from the child component.\n     */\n    _captureKeyValue = (value) => {\n        // TODO: maybe change this to a switch statement.\n        if (willClearAllCharacters(value)) return this._clearEverything();\n        if (willClearLastWholeEntry(value)) return this._clearLastWholeEntry();\n        if (willClearLastCharacter(value)) return this._removeLastCharFromCalculation();\n        if (willPerformCalculation(value)) return this._doCalculation();\n\n        if (this._checkIfLastValueIsAMathOperator(value) === false) {\n            let shouldAddSpace = isMathematicalOperator(value) || willPerformCalculation(value);\n            let outputValue = isPercentage(value) ? ' / 100' : value;\n\n            this.setState({calculation: shouldAddSpace ? this.state.calculation + ' ' + outputValue + ' ' : this.state.calculation + outputValue});\n        }\n    }\n\n    /**\n     * This will parse the calculation and execute it.\n     */\n    _doCalculation = () => {\n        if(this.state.calculation !== '') {\n            let calculation = this.state.calculation;\n            let splitCalculation = calculation.split(\" \");\n            let removeBlankEntries = splitCalculation.filter(arrValue => arrValue !== '');\n            let lastEntry = removeBlankEntries[removeBlankEntries.length - 1];\n\n            if (isMathematicalOperator(lastEntry)) {\n                removeBlankEntries.pop(lastEntry);\n                calculation = removeBlankEntries.join(\" \");\n            }\n\n            const result = eval(calculation);\n            this.setState({ result: result.toFixed(2)});\n        }\n    }\n\n    /**\n     * Clears the component state.\n     */\n    _clearEverything = () => {\n        this.setState({calculation: '', result: 0});\n    }\n\n    /**\n     * Clears the last whole entry from the calculation state.\n     */\n    _clearLastWholeEntry = () => {\n        const calculation = this.state.calculation;\n        let splitCalculation = calculation.split(\" \");\n        let lastWholeEntry = splitCalculation[splitCalculation.length - 1];\n\n        this.setState({calculation: calculation.substring(0, calculation.length - lastWholeEntry.length)});\n    }\n\n    /**\n     * Removes last character from the calculation.\n     */\n    _removeLastCharFromCalculation = () => {\n        const calculation = this.state.calculation;\n        this.setState({calculation: calculation.substring(0, calculation.length - 1)});\n    }\n\n    /**\n     * This will check if the last entered value of a calculation is a key function as we\n     * don't want the user to enter things such as (45 ++ - 4);\n     */\n    _checkIfLastValueIsAMathOperator = (value) => {\n        const calculation = this.state.calculation;\n        let splitCalculation = calculation.split(\" \");\n        let removeBlankEntries = splitCalculation.filter(arrValue => arrValue !== '');\n\n        let lastEntry = removeBlankEntries[removeBlankEntries.length - 1];\n\n        let isLastEntryMathOp = isMathematicalOperator(lastEntry) ? true : false;\n        let isCurrValueMathOp = isMathematicalOperator(value) ? true : false;\n\n        return isLastEntryMathOp === true && isCurrValueMathOp === true ? true : false;\n    }\n\n}\n\nexport default Calculator;","import React, {Component} from 'react';\nimport './Key.css';\n\nclass Key extends Component {\n    constructor(props) {\n        super(props);\n\n        this._captureAndStoreValue = this._captureAndStoreValue.bind(this);\n        this._renderLabelForKey = this._renderLabelForKey.bind(this);\n    }\n\n    render() {\n        return(\n            <button onClick={(event) => this._captureAndStoreValue(event.target)} className={`key key--${this.props.colour}`} data-value={this.props.value}>\n               {this._renderLabelForKey()}\n            </button>\n        );\n    }\n\n    /**\n     * This will capture and store the key value in the state when\n     * the key is pressed/clicked.\n     * \n     * @var {Object} target The target element.\n     */\n    _captureAndStoreValue = (target) => {\n        // TODO: Look at disabling event bubbling for when we have icons.\n        let value = target.getAttribute('data-value');\n        this._passStateValueToParent(value);\n    }\n\n    /**\n     * This will check if the icon or label is null and render the\n     * appropriate label/icon for the button/key.\n     */\n    _renderLabelForKey = () => {\n        return this.props.label !== null ? this.props.label : `<img src=\"${require('./../../assets/svg/' + this.props.icon + '.svg')}\"/>`;\n    }\n\n    /**\n     * This will pass the state value up one parent level.\n     * Given that the prop callback is 'captureKeyValue'.\n     * \n     * @var {Any} value The value to be passed up to the parent.\n     */\n    _passStateValueToParent = (value) => {\n        this.props.captureKeyValue(value);\n    }\n}\n\nexport default Key;","/**\n * An array of static objects that are used to populate the\n * keys and values on the calculator.\n */\nexport const CalculatorKeys = [\n    {\n        id: 1,\n        label: 'AC',\n        value: 'AC',\n        icon: null,\n        colour: 'plum--dark'\n    },\n    {\n        id: 2,\n        label: 'C',\n        value: 'C',\n        icon: null,\n        colour: 'plum--medium'\n    },\n    {\n        id: 3,\n        label: '%',\n        value: '%',\n        icon: null,\n        colour: 'plum--medium'\n    },\n    {\n        id: 4,\n        label: '/',\n        value: '/',\n        icon: null,\n        colour: 'lilac'\n    },\n    {\n        id: 5,\n        label: '7',\n        value: 7,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 6,\n        label: '8',\n        value: 8,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 7,\n        label: '9',\n        value: 9,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 8,\n        label: '*',\n        value: '*',\n        icon: 'times',\n        colour: 'lilac'\n    },\n    {\n        id: 9,\n        label: '4',\n        value: 4,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 10,\n        label: '5',\n        value: 5,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 11,\n        label: '6',\n        value: 6,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 12,\n        label: '-',\n        value: '-',\n        icon: null,\n        colour: 'lilac'\n    },\n    {\n        id: 13,\n        label: '1',\n        value: 1,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 14,\n        label: '2',\n        value: 2,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 15,\n        label: '3',\n        value: 3,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 16,\n        label: '+',\n        value: '+',\n        icon: null,\n        colour: 'lilac'\n    },\n    {\n        id: 17,\n        label: '0',\n        value: 0,\n        icon: null,\n        colour: 'plum--light'\n    },\n    {\n        id: 18,\n        label: '.',\n        value: '.',\n        icon: null,\n        colour: 'plum--medium'\n    },\n    {\n        id: 19,\n        label: 'del',\n        value: 'del',\n        icon: null,\n        colour: 'plum--medium'\n    },\n    {\n        id: 20,\n        label: '=',\n        value: '=',\n        icon: null,\n        colour: 'lilac'\n    }\n];","var map = {\n\t\"./App-Icon.svg\": 8,\n\t\"./divide.svg\": 24,\n\t\"./equals.svg\": 25,\n\t\"./minus.svg\": 26,\n\t\"./plus.svg\": 27,\n\t\"./times.svg\": 28\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/divide.09f15129.svg\";","module.exports = __webpack_public_path__ + \"static/media/equals.bf665f47.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.5252db72.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.e5f57f20.svg\";","module.exports = __webpack_public_path__ + \"static/media/times.d5209bce.svg\";","import React from 'react';\nimport Calculator from './components/calculator/Calculator';\nimport logo from './assets/svg/App-Icon.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"App Icon\" />\n        <h2>Simple Calculator</h2>      \n      </header>\n      <div className=\"App-body\">\n        <Calculator />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}